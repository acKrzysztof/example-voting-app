pipeline{
    agent none
    stages{
        stage('Build'){
            agent{
                docker{ 
                    image 'python:2.7.16-alpine' 
                    args '--user root'
                }
            }
            when{
                changeset '**/vote/**'
            }
            steps{
                echo 'Running build vote app'
                dir('vote'){
                    sh 'pip install -r requirements.txt'
                }
            }
        }
        stage('Test'){
            agent{
                docker{ 
                    image 'python:2.7.16-alpine' 
                    args '--user root'
                }
            }
            when{
                changeset '**/vote/**'
            }
            steps{
                echo 'Running tests vote app'
                dir('vote'){
                    sh 'pip install -r requirements.txt'
                    sh 'nosetests -v'
                }
            }
        }
        stage('Docker image create and push'){
            agent any
            when{
                changeset '**/vote/**'

            }
            steps{
                echo 'Create docker image and push'
                script{
                    docker.withRegistry('https://index.docker.io/v1/', 'dockerlogin') {
                        def voteImage = docker.build("ackrzysztof/vote:v${env.BUILD_ID}", './vote')
                        voteImage.push()
                        voteImage.push("${env.BRANCH_NAME}")
                    }
                }
            }
        }
    }
    post{
        always{
            echo 'Vote app pipeline completed'
        }
        success{
            slackSend(message: "Build Succedeed - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
        }
        failure{
            slackSend(message: "Build Failed - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
        }
    }
} 
