pipeline {
    agent none

    stages {
        stage('build') {
            agent {
                docker { image 'node:8.9-alpine' }
            }
            when{
                changeset "**/result/**"
            }
            steps {
                echo 'Building result app'
		        dir('result'){
                    sh 'npm install'
                }
            }
        }
        stage('test') {
            agent {
                docker { image 'node:8.9-alpine' }
            }
            when{
                changeset "**/result/**"
            }
            steps {
                echo 'Running tests'
		        dir('result'){
                    sh 'npm install'
                    sh 'npm test'
                }
            }
        }
        stage('docker imgage build and push') {
            agent any
            when{
                changeset "**/result/**"
            }
            steps {
                echo 'Create docker image and push'
                scrpit {
                    docker.withRegistry('https://index.docker.io/v1/', 'dockerlogin') {
                        def resultImage('ackrzysztof/result:v${env.BUILD_ID}', './result')
                        resultImage.push()
                        resultImage.push("${env.BRANCH_NAME})
                    }
                }
            }
        }
    }
    post {
        always {
            echo 'Result pipeline execution completed'
        }
        failure {
            slackSend(message: "Build Failed - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")

        }
        success {
            slackSend(message: "Build Succedeed - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")

        }
    }
}

